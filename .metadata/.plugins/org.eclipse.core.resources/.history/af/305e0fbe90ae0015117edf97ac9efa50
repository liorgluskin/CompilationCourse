
############################################
# String literals
str_null_ref: "Runtime Error: Null pointer dereference!"
str_array_access: "Runtime Error: Array index out of bounds!"
str_size: "Runtime Error: Array allocation with negative array size!"
str_zero: "Runtime Error: Division by zero!"
str4: ""
str3: " "
str1: "Primes less than "
str2: ": "
############################################

############################################
# Dispatch vectors
_DV_Sieve: [_Sieve_printPrimes,_Sieve_test,_Sieve_initArray,_Sieve_sieve,_Sieve_sieveAll]
############################################

############################################
# Runtime Checks
__checkNullRef:
Return Rdummy
__checkArrayAccess:
Return Rdummy
__checkSize:
Return Rdummy
__checkZero:
Return Rdummy
############################################



####Sieve.initArray####
_Sieve_initArray:
Move 0,R1
Move R1,v_1_i
_while_test_label0: 
Move this,R2
StaticCall __checkNullRef(a=R2),Rdummy
ArrayLength R2,R3
Move v_1_i,R4
Compare R3,R4
JumpL _true_label2
Move 0,R4
Jump _end_label2
_true_label2:
Move 1,R4
_end_label2:
# line number: 20
Compare 0,R4
JumpTrue _while_end_label1
StaticCall __checkNullRef(a=R2),Rdummy
MoveField R2.1,R6
Move v_1_i,R7
StaticCall __checkArrayAccess(a=R6,i=R7),Rdummy
Move v_1_i,R8
MoveArray R8,R6[R7]
Move v_1_i,R9
Add 1,R9
Move R9,v_1_i
Jump _while_test_label0
_while_end_label1: 
Return Rdummy

####Sieve.sieveAll####
_Sieve_sieveAll:
Move 2,R11
Move R11,v_2_i
_while_test_label3: 
Move this,R12
StaticCall __checkNullRef(a=R12),Rdummy
ArrayLength R12,R13
Move v_2_i,R14
Compare R13,R14
JumpL _true_label5
Move 0,R14
Jump _end_label5
_true_label5:
Move 1,R14
_end_label5:
# line number: 28
Compare 0,R14
JumpTrue _while_end_label4
#virtual call to sieve's location:
VirtualCall R12.3(p_0=v_2_i),Rdummy
Move v_2_i,R16
Add 1,R16
Move R16,v_2_i
Jump _while_test_label3
_while_end_label4: 
Return Rdummy

####Sieve.sieve####
_Sieve_sieve:
Move 2,R18
Mul p_0,R18
Move R18,v_3_i
_while_test_label6: 
Move this,R20
StaticCall __checkNullRef(a=R20),Rdummy
ArrayLength R20,R21
Move v_3_i,R22
Compare R21,R22
JumpL _true_label8
Move 0,R22
Jump _end_label8
_true_label8:
Move 1,R22
_end_label8:
# line number: 36
Compare 0,R22
JumpTrue _while_end_label7
StaticCall __checkNullRef(a=R20),Rdummy
MoveField R20.1,R24
Move v_3_i,R25
StaticCall __checkArrayAccess(a=R24,i=R25),Rdummy
Move 0,R26
MoveArray R26,R24[R25]
Move v_3_i,R27
Add p_0,R27
Move R27,v_3_i
Jump _while_test_label6
_while_end_label7: 
Return Rdummy

####Sieve.printPrimes####
_Sieve_printPrimes:
Move 100,R29
Move R29,v_4_i
Library __print(str1),Rdummy
Move this,R30
StaticCall __checkNullRef(a=R30),Rdummy
ArrayLength R30,R31
Library __printi(R31),Rdummy
Library __print(str2),Rdummy
_while_test_label9: 
StaticCall __checkNullRef(a=R30),Rdummy
ArrayLength R30,R32
Move v_4_i,R33
Compare R32,R33
JumpL _true_label11
Move 0,R33
Jump _end_label11
_true_label11:
Move 1,R33
_end_label11:
# line number: 47
Compare 0,R33
JumpTrue _while_end_label10
StaticCall __checkNullRef(a=R30),Rdummy
MoveField R30.1,R35
Move v_4_i,R36
StaticCall __checkArrayAccess(a=R35,i=R36),Rdummy
MoveArray R35[R36],R37
Compare 0,R37
JumpFalse _true_label14
Move 0,R37
Jump _end_label14
_true_label14:
Move 1,R37
_end_label14:
# line number: 48
Compare 0,R37
JumpTrue _end_if_label13
StaticCall __checkNullRef(a=R30),Rdummy
MoveField R30.1,R39
Move v_4_i,R40
StaticCall __checkArrayAccess(a=R39,i=R40),Rdummy
MoveArray R39[R40],R41
Library __printi(R41),Rdummy
Library __print(str3),Rdummy
Jump _end_if_label13
_end_if_label13: 
Move v_4_i,R42
Add 1,R42
Move R42,v_4_i
Jump _while_test_label9
_while_end_label10: 
Return Rdummy

####Sieve.test####
_Sieve_test:
Library __println(str4),Rdummy
Move 100,R45
Move R45,v_5_n
Move v_5_n,R46
StaticCall __checkSize(n=R46),Rdummy
Move R46,R47
Mul 4,R47
Library __allocateArray(R47),R48
_array_init_start15: 
Dec R46
Compare 0,R46
JumpL _array_init_end16
MoveArray 0,R48[R46]
JumpL _array_init_start15
_array_init_end16: 
Move this,R49
MoveField R48,R49.1
#virtual call to initArray's location:
VirtualCall R49.2(),Rdummy
#virtual call to sieveAll's location:
VirtualCall R49.4(),Rdummy
#virtual call to printPrimes's location:
VirtualCall R49.0(),Rdummy
Library __println(str4),Rdummy
Return Rdummy

####main in Sieve####
_ic_main:
#virtual call to test's location:
Library __allocateObject(8),R44
MoveField _DV_Sieve,R44.0
VirtualCall R44.1(),Rdummy

Done
